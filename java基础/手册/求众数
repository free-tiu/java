class Solution {
    public int majorityElement（int [] nums）{
        return find（nums，0，nums.length-1）;        
    }
    
        public static int find（int [] nums，int begin，int end）{
        if（开始==结束）
            return nums [开始];
        其他{
            int mid =（begin + end）/ 2;
            int left = find（nums，begin，mid）;
            int right = find（nums，mid + 1，end）;
 
            if（left == right）//左右两部分的众数相同则这个数是这部分的众数
                左转;
            else {//左右两部分的众数不相同则这两个数都有可能是这部分的众数
                //那么遍历这个数组看一下哪个数字的出现频率高
                int countLeft = 0;
                int countRight = 0;
                for（int i = begin; i <= end; i ++）
                    if（nums [i] == left）
                        countLeft ++;
                    否则如果（nums [i] == right）
                        countRight ++;
 
                如果（countLeft> countRight）
                    左转;
                其他
                    回来吧;
            }
        }

    }
};
